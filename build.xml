<?xml version="1.0"?>
<project name="Build Alasca" default="make" xmlns:ac="antlib:net.sf.antcontrib">

	<!-- ================== Initialize Property Values ================= -->

	<!-- Set global properties for this build -->
	<property file="alasca.properties" />
	<property name="ALASCA_DISTDIR" value="dist" />
	<property name="ALASCA_BUILDDIR" value="${ALASCA_DISTDIR}/build" />
	<property name="ALASCA_TARGETDIR" value="${ALASCA_DISTDIR}/target" />
	<property name="ALASCA_NAME" value="alasca" />
	<property name="ALASCA_VERSION" value="0.4" />
	<property name="ALASCA_PLUGINLIST" value="adct-autogen,schema-converter,schema-reorganizer,schema-query,uuid-autogen" />
	<property name="COMPILE.DEBUG" value="true" />
	<property name="COMPILE.DEPRECATION" value="true" />
	<property name="COMPILE.OPTIMIZE" value="true" />
	<property name="COMPILE.ENCODING" value="UTF8" />

	<!-- Classpaths -->
	<path id="compile.classpath">
		<pathelement path="${ALASCA_BUILDDIR}/main" />
		<fileset dir="lib">
			<include name="**/*.jar"/>
		</fileset>
	</path>
	<pathconvert property="manifest.classpath" pathsep=" ">
		<path>
			<fileset dir="lib">
				<include name="**/*.jar"/>
			</fileset>
		</path>
		<flattenmapper />
	</pathconvert>

	<!-- Types -->
	<typedef uri="antlib:net.sf.antcontrib"><classpath refid="compile.classpath" /></typedef>
	<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="compile.classpath" />
	<taskdef name="jacobe" classname="com.tiobe.jacobe.JacobeTask" classpathref="compile.classpath"/>

	<!-- ======================== Main targets ======================== -->

	<!-- Verify code -->
	<target name="check" depends="clean,code-check" />

	<!-- Clean directories -->
	<target name="clean">
		<delete dir="${ALASCA_DISTDIR}" failonerror="false" />
	</target>

	<!-- Build sources -->
	<target name="make" depends="clean,build-make" />

	<!-- Make packages -->
	<target name="package" depends="clean,build-packages" />

	<!-- ======================== Build targets ======================== -->

	<!-- Prepare environment -->
	<target name="build-prepare">
		<mkdir dir="${ALASCA_TARGETDIR}/bin" />
		<mkdir dir="${ALASCA_TARGETDIR}/lib/plugin" />
		<mkdir dir="${ALASCA_BUILDDIR}/main" />
		<mkdir dir="${ALASCA_BUILDDIR}/plugin" />
		<mkdir dir="${ALASCA_BUILDDIR}/reports" />
		<ac:for list="${ALASCA_PLUGINLIST}" param="plugin">
			<sequential>
				<mkdir dir="${ALASCA_BUILDDIR}/plugin/@{plugin}" />
			</sequential>
		</ac:for>
	</target>

	<!-- Compile main sources and plugins -->
	<target name="build-compile" depends="build-prepare">
		<javac srcdir="src/main"
			destdir="${ALASCA_BUILDDIR}/main"
			debug="${COMPILE.DEBUG}"
			debuglevel="lines,vars,source"
			deprecation="${COMPILE.DEPRECATION}"
			encoding="${COMPILE.ENCODING}"
			optimize="${COMPILE.OPTIMIZE}"
			verbose="false"
			includeantruntime="false">
			<compilerarg value="-Xlint"/>
			<classpath refid="compile.classpath"/>
		</javac>
		<ac:for list="${ALASCA_PLUGINLIST}" param="plugin" keepgoing="true">
			<sequential>
				<javac srcdir="src/plugin/@{plugin}"
					destdir="${ALASCA_BUILDDIR}/plugin/@{plugin}"
					debug="${COMPILE.DEBUG}"
					debuglevel="lines,vars,source"
					deprecation="${COMPILE.DEPRECATION}"
					encoding="${COMPILE.ENCODING}"
					optimize="${COMPILE.OPTIMIZE}"
					verbose="false"
					includeantruntime="false">
					<compilerarg value="-Xlint"/>
					<classpath refid="compile.classpath"/>
				</javac>
			</sequential>
		</ac:for>
	</target>

	<!-- Creating jar files -->
	<target name="build-makejar" depends="build-compile">
		<jar destfile="${ALASCA_TARGETDIR}/${ALASCA_NAME}-${ALASCA_VERSION}.jar">
			<manifest>
				<attribute name="Main-Class" value="net.aepik.alasca.Launcher" />
				<attribute name="Class-Path" value="${manifest.classpath}" />
			</manifest>
			<fileset dir="${ALASCA_BUILDDIR}/main">
				<include name="**/*.class" />
			</fileset>
		</jar>
		<ac:for list="${ALASCA_PLUGINLIST}" param="plugin" keepgoing="true">
			<sequential>
				<jar destfile="${ALASCA_TARGETDIR}/lib/plugin/@{plugin}-${ALASCA_VERSION}.jar">
					<fileset dir="${ALASCA_BUILDDIR}/plugin/@{plugin}">
						<include name="**/*.class" />
					</fileset>
				</jar>
			</sequential>
		</ac:for>
	</target>

	<!-- Build sources -->
	<target name="build-make" depends="build-makejar">
		<move file="${ALASCA_TARGETDIR}/${ALASCA_NAME}-${ALASCA_VERSION}.jar" todir="${ALASCA_TARGETDIR}/lib" />
		<copy todir="${ALASCA_TARGETDIR}/lib">
			<fileset dir="lib">
				<exclude name="build/**"/>
			</fileset>
		</copy>
		<copy todir="${ALASCA_TARGETDIR}/lib/resources">
			<fileset dir="src/main/resources"/>
		</copy>
		<ac:for list="${ALASCA_PLUGINLIST}" param="plugin" keepgoing="true">
			<sequential>
				<mkdir dir="${ALASCA_TARGETDIR}/lib/resources/@{plugin}" />
				<copy todir="${ALASCA_TARGETDIR}/lib/resources/@{plugin}" failonerror="false">
					<fileset dir="src/plugin/@{plugin}/resources" />
				</copy>
			</sequential>
		</ac:for>
		<copy todir="${ALASCA_TARGETDIR}/bin">
			<fileset dir="src/install"/>
		</copy>
		<chmod perm="755">
			<fileset dir="${ALASCA_TARGETDIR}/bin"/>
		</chmod>
	</target>

	<!-- Make binaries and sources pckages -->
	<target name="build-packages" depends="build-make">
		<tar destfile="${ALASCA_DISTDIR}/${ALASCA_NAME}-${ALASCA_VERSION}-bin.tar.gz" compression="gzip">
			<tarfileset prefix="/${ALASCA_NAME}-${ALASCA_VERSION}/bin" dir="${ALASCA_TARGETDIR}/bin" filemode="755" />
			<tarfileset prefix="/${ALASCA_NAME}-${ALASCA_VERSION}/lib" dir="${ALASCA_TARGETDIR}/lib"/>
			<tarfileset prefix="/${ALASCA_NAME}-${ALASCA_VERSION}/share" dir="misc"/>
		</tar>
		<tar destfile="${ALASCA_DISTDIR}/${ALASCA_NAME}-${ALASCA_VERSION}-src.tar.gz" compression="gzip">
			<tarfileset prefix="/${ALASCA_NAME}-${ALASCA_VERSION}-src" dir=".">
				<include name="**/*.*"/>
				<exclude name="**/.*"/>
				<exclude name="dist/**"/>
			</tarfileset>
		</tar>
		<delete dir="${ALASCA_BUILDDIR}" failonerror="false" />
		<delete dir="${ALASCA_TARGETDIR}" failonerror="false" />
	</target>

	<!-- ======================= Quality targets ======================= -->

	<!-- Cleaning code -->
	<target name="code-beautify">
		<jacobe input="src" cfg="src/build/jacobe.cfg" javadoc="private" quiet="false" overwrite="true" nobackup="true" />
	</target>

	<!-- Verify code complexity -->
	<target name="code-check" depends="build-prepare">
		<pmd rulesetfiles="basic,imports,unusedcode,strings,braces,codesize">
			<formatter type="text" toFile="${ALASCA_BUILDDIR}/reports/pmd_report.log"/>
			<formatter type="xml" toFile="${ALASCA_BUILDDIR}/reports/pmd_report.xml"/>
			<fileset dir="src">
				<include name="**/*.java"/>
			</fileset>
		</pmd>
		<loadfile srcFile="${ALASCA_BUILDDIR}/reports/pmd_report.log" property="pmdreports"/>
		<echo message="${pmdreports}"/>
	</target>

</project>

